from app.actions.user_actions.decorators import log_user_action
from app.bot_engine.update_context import UpdateContext
from app.bot_engine.utils import inline_keyboard_builder
from app.medias.decorators import with_image_file
from app.medias.models import Media

MESSAGE_IMAGE_PATH = "images/logo.png"
TEXT = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Wonderland ‚Äî –≤–æ–ª—à–µ–±–Ω—ã–π –º–∏—Ä —à–æ—É –ø—É–∑—ã—Ä–µ–π –∏ –≤–µ—Å—ë–ª—ã—Ö –∞–Ω–∏–º–∞—Ç–æ—Ä–æ–≤!\n"
    "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
)
USER_KEYBOARD = inline_keyboard_builder(
    [
        [["üé≠ –ü—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∑–∞–∫–∞–∑", "choosing_program"]],
        [["üéÅ –ê–∫—Ü–∏–∏", "promo"]],
        [["‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "viewing_faq"]],
        [["üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", "feedback_input"]],
    ]
)


@log_user_action("main_menu")
@with_image_file(MESSAGE_IMAGE_PATH)
async def main_menu_callback(
    ctx: UpdateContext, image_file: Media | None, *args, **kwargs
):
    _, created = await ctx.store.user.get_or_create(
        ctx.db_session, ctx.update.from_user
    )
    if created:
        # TODO –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –±—Ä–æ–∫–µ—Ä
        # TODO –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–∫—Ä—ã—Ç –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–¥–æ —ç—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å user?id = 1051661221
        link_keyboard = inline_keyboard_builder(
            [
                [["–ø—Ä–æ—Ñ–∏–ª—å", "", f"tg://user?id={ctx.update.from_user.tg_id}"]],
            ]
        )
        for admin in await ctx.store.admin.get_all(ctx.db_session):
            await ctx.store.tg_api.send_message(
                chat_id=admin.tg_id,
                text="–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: TODO –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ",
                reply_markup=link_keyboard,
            )

    answer = await ctx.store.tg_api.edit_message_media(
        chat_id=ctx.update.get_chat_id(),
        message_id=ctx.update.get_message_id(),
        file_id=image_file.file_id if image_file else None,
        file_path=MESSAGE_IMAGE_PATH,
        caption=TEXT,
        reply_markup=USER_KEYBOARD,
    )
    return answer


@log_user_action("main_menu")
@with_image_file(MESSAGE_IMAGE_PATH)
async def main_menu_command(
    ctx: UpdateContext, image_file: Media | None, *args, **kwargs
):
    _, created = await ctx.store.user.get_or_create(
        ctx.db_session, ctx.update.from_user
    )
    if created:
        # TODO –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ –±—Ä–æ–∫–µ—Ä
        # TODO –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–∫—Ä—ã—Ç –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–¥–æ —ç—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å user?id = 1051661221
        link_keyboard = inline_keyboard_builder(
            [
                [["–ø—Ä–æ—Ñ–∏–ª—å", "", f"tg://user?id={ctx.update.from_user.tg_id}"]],
            ]
        )
        for admin in await ctx.store.admin.get_all(ctx.db_session):
            await ctx.store.tg_api.send_message(
                chat_id=admin.tg_id,
                text="–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: TODO –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ",
                reply_markup=link_keyboard,
            )

    answer = await ctx.store.tg_api.send_photo(
        chat_id=ctx.update.get_chat_id(),
        caption=TEXT,
        path_image=MESSAGE_IMAGE_PATH,
        file_id=image_file.file_id if image_file else None,
        reply_markup=USER_KEYBOARD,
    )
    return answer
